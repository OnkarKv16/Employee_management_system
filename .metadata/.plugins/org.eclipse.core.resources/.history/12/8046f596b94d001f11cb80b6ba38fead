package com.app.emp_mgmt.controller;

import java.util.List;
import java.util.stream.Collectors;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.app.emp_mgmt.entity.Department;
import com.app.emp_mgmt.model.DepartmentDTO;
import com.app.emp_mgmt.service.IDepartmentService;

@RestController
@RequestMapping("/api/departments")
public class DepartmentController {

    private final IDepartmentService departmentService;
    private final ModelMapper modelMapper;

    @Autowired
    public DepartmentController(IDepartmentService departmentService, ModelMapper modelMapper) {
        this.departmentService = departmentService;
        this.modelMapper = modelMapper;
    }

    @PostMapping
    public ResponseEntity<DepartmentDTO> createDepartment(@RequestBody DepartmentDTO departmentDTO) {
        Department department = modelMapper.map(departmentDTO, Department.class);
        Department savedDepartment = departmentService.saveDepartment(department);
        DepartmentDTO savedDepartmentDTO = modelMapper.map(savedDepartment, DepartmentDTO.class);
        return ResponseEntity.ok(savedDepartmentDTO);
    }

    @PutMapping("/{id}")
    public ResponseEntity<DepartmentDTO> updateDepartment(@PathVariable Long id, @RequestBody DepartmentDTO departmentDTO) {
        Department department = modelMapper.map(departmentDTO, Department.class);
        Department updatedDepartment = departmentService.updateDepartment(id, department);
        DepartmentDTO updatedDepartmentDTO = modelMapper.map(updatedDepartment, DepartmentDTO.class);
        return ResponseEntity.ok(updatedDepartmentDTO);
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteDepartment(@PathVariable Long id) {
        departmentService.deleteDepartment(id);
        return ResponseEntity.noContent().build();
    }

    @GetMapping("/{id}")
    public ResponseEntity<DepartmentDTO> getDepartmentById(@PathVariable Long id) {
        Department department = departmentService.getDepartmentById(id);
        DepartmentDTO departmentDTO = modelMapper.map(department, DepartmentDTO.class);
        return ResponseEntity.ok(departmentDTO);
    }

    @GetMapping
    public ResponseEntity<List<DepartmentDTO>> getAllDepartments() {
        List<Department> departments = departmentService.getAllDepartments();
        List<DepartmentDTO> departmentDTOs = departments.stream()
                .map(department -> modelMapper.map(department, DepartmentDTO.class))
                .collect(Collectors.toList());
        return ResponseEntity.ok(departmentDTOs);
    }
}

//package com.app.emp_mgmt.controller;
//
//import com.app.emp_mgmt.dto.DepartmentDTO;
//import com.app.emp_mgmt.service.IDepartmentService;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.http.HttpStatus;
//import org.springframework.http.ResponseEntity;
//import org.springframework.web.bind.annotation.*;
//
//import java.util.List;
//
//@RestController
//@RequestMapping("/api/departments")
//public class DepartmentController {
//
//    @Autowired
//    private IDepartmentService departmentService;
//
//    @PostMapping
//    public ResponseEntity<DepartmentDTO> createDepartment(@RequestBody DepartmentDTO departmentDTO) {
//        DepartmentDTO createdDepartment = departmentService.createDepartment(departmentDTO);
//        return new ResponseEntity<>(createdDepartment, HttpStatus.CREATED);
//    }
//
//    @GetMapping("/{id}")
//    public ResponseEntity<DepartmentDTO> getDepartmentById(@PathVariable Long id) {
//        DepartmentDTO departmentDTO = departmentService.getDepartmentById(id);
//        return new ResponseEntity<>(departmentDTO, HttpStatus.OK);
//    }
//
//    @GetMapping
//    public ResponseEntity<List<DepartmentDTO>> getAllDepartments() {
//        List<DepartmentDTO> departments = departmentService.getAllDepartments();
//        return new ResponseEntity<>(departments, HttpStatus.OK);
//    }
//
//    @PutMapping("/{id}")
//    public ResponseEntity<DepartmentDTO> updateDepartment(@PathVariable Long id, @RequestBody DepartmentDTO departmentDTO) {
//        DepartmentDTO updatedDepartment = departmentService.updateDepartment(id, departmentDTO);
//        return new ResponseEntity<>(updatedDepartment, HttpStatus.OK);
//    }
//
//    @DeleteMapping("/{id}")
//    public ResponseEntity<Void> deleteDepartment(@PathVariable Long id) {
//        boolean isDeleted = departmentService.deleteDepartment(id);
//        return isDeleted ? new ResponseEntity<>(HttpStatus.NO_CONTENT) : new ResponseEntity<>(HttpStatus.NOT_FOUND);
//    }
//}

